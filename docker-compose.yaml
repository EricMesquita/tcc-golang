---
version: '3.8'
services:
  # Postgres database
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: go-project-template
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "6432:5432"
    volumes:
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres-compose-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 1

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-go
    ports:
      - 9091:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # Redis database
  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 1

  grafana:
    image: grafana/grafana:3.0.1
    container_name: grafana-go
    ports:
      - 3002:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana_data: { }

networks:
  postgres-compose-network:
    driver: bridge


